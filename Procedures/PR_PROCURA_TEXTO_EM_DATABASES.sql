
CREATE PROCEDURE [dbo].[PR_PROCURA_TEXTO_EM_DATABASES] 
	@TEXTO_PROCURADO VARCHAR(MAX)
	,@DATABASE VARCHAR(MAX) = NULL
AS
/*
Use the following query to follow if somethins were found
SELECT * FROM ##CONSULTA_TEXTO_TABELAS (NOLOCK) HERE RETORNOU_PROCURA =1
*/

BEGIN
SET NOCOUNT ON

	CREATE TABLE ##CONSULTA_TEXTO_TABELAS (
		CHAVE				 INT IDENTITY
		,TIPO_OBJETO		 VARCHAR(MAX)
		,[OBJECT_ID]		 VARCHAR(MAX)		
		,NOME_DATABASE		 VARCHAR(MAX)
		,NOME_SCHEMA 		 VARCHAR(MAX)
		,NOME_OBJETO 		 VARCHAR(MAX)
		,NOME_COLUNA 		 VARCHAR(MAX)
		,TIPO_DADO_COLUNA	 VARCHAR(MAX)
		,QUERY_COMPLETA		 VARCHAR(MAX)
		,RETORNOU_PROCURA    BIT DEFAULT 0
	)

	DECLARE @QUERY NVARCHAR(MAX)
			,@DYNAMICPARAMDEC AS NVARCHAR(MAX)
			,@RETORNO AS VARCHAR(MAX)	

	SET @DATABASE  = '''' + REPLACE(@DATABASE, ',', ''',''') + ''''

--==================================================================================
--Faz o cadastramento de Tabelas e Views para Busca
--==================================================================================
	SET @QUERY = 'USE [?];' + CHAR(13)
	SET @QUERY = @QUERY + 'SELECT DISTINCT' + CHAR(13)
	SET @QUERY = @QUERY + 'TIPO_OBJETO = CASE A.TYPE WHEN ''U'' THEN ''TABELA'' WHEN ''V'' THEN ''VIEW'''  + CHAR(13)
	SET @QUERY = @QUERY + 'WHEN ''P'' THEN ''PROCEDURE'' WHEN ''FN'' THEN ''FUNCAO'' WHEN ''TF'' THEN ''FUNCAO TABELA''  END'  + CHAR(13)
	SET @QUERY = @QUERY + ',OBJECT_ID = A.OBJECT_ID'  + CHAR(13)
	SET @QUERY = @QUERY + ',NOME_DATABASE = DB_NAME()'  + CHAR(13)
	SET @QUERY = @QUERY + ',NOME_SCHEMA = B.NAME'  + CHAR(13)
	SET @QUERY = @QUERY + ',NOME_OBJETO = A.NAME'  + CHAR(13)
	SET @QUERY = @QUERY + ',NOME_COLUNA = C.NAME'  + CHAR(13)
	SET @QUERY = @QUERY + ',TIPO_DADO_COLUNA = D.NAME'  + CHAR(13)
	SET @QUERY = @QUERY + 'FROM SYS.OBJECTS A' + CHAR(13)
	SET @QUERY = @QUERY + 'INNER JOIN SYS.SCHEMAS B ON A.SCHEMA_id = B.schema_id' + CHAR(13)
	SET @QUERY = @QUERY + 'LEFT JOIN SYS.columns C ON A.object_id = C.object_id' + CHAR(13)
	SET @QUERY = @QUERY + 'LEFT JOIN SYS.types D ON C.system_type_id = D.system_type_id' + CHAR(13)
	SET @QUERY = @QUERY + 'AND C.user_type_id = D.user_type_id ' + CHAR(13)
	SET @QUERY = @QUERY + 'WHERE DB_NAME() NOT IN (''master'',''tempdb'',''model'',''msdb'')' + CHAR(13)
	SET @QUERY = @QUERY + 'AND A.TYPE IN (''U'', ''V'', ''P'', ''FN'', ''TF'')' + CHAR(13)
	
	

	IF @DATABASE IS NOT NULL
	BEGIN
		SET @QUERY = @QUERY + 'AND DB_NAME() IN (' + @DATABASE + ')' + CHAR(13)
	END

	--PRINT @QUERY

	INSERT INTO ##CONSULTA_TEXTO_TABELAS (TIPO_OBJETO, [OBJECT_ID], NOME_DATABASE,NOME_SCHEMA,NOME_OBJETO,NOME_COLUNA, TIPO_DADO_COLUNA ) 
	EXEC sp_MSforeachdb @QUERY

	--Remove colunas que são do tipo imagem (a consulta gerará uma exceção)
	DELETE FROM ##CONSULTA_TEXTO_TABELAS  where TIPO_DADO_COLUNA in ('IMAGE') 

	--Monta a query de consulta com o parâmetro de busca (se for feito em SQl anterior ao 2012, deve-se substituir o TRY_CONVERT por CONVERT)
	UPDATE A
		SET QUERY_COMPLETA =  CASE WHEN TIPO_OBJETO NOT IN ('PROCEDURE', 'FUNCAO', 'FUNCAO TABELA' ) THEN
							 + 'SELECT DISTINCT [' + A.NOME_COLUNA + '] = CONVERT(NVARCHAR(MAX),[' + A.NOME_COLUNA + ']'
							 + ') FROM [' + A.NOME_DATABASE + '].[' + A.NOME_SCHEMA + '].[' + A.NOME_OBJETO + ']'
							 + ' WHERE CONVERT(NVARCHAR(MAX),[' + A.NOME_COLUNA + ']) LIKE ''%' + @TEXTO_PROCURADO + '%'''
							  ELSE 
							  'SELECT DISTINCT [DEFINITION] FROM [' + A.NOME_DATABASE + '].[SYS].[SQL_MODULES]'
							 + ' WHERE [OBJECT_ID] = ' + A.[OBJECT_ID] + ' AND [DEFINITION] LIKE ''%' + @TEXTO_PROCURADO + '%'''
							 END
		FROM ##CONSULTA_TEXTO_TABELAS A

	--SELECT * FROM ##CONSULTA_TEXTO_TABELAS

	-- Cursor para percorrer o texto das consultas a serem realizadas
	DECLARE MEU_CURSOR CURSOR FOR
		SELECT CHAVE, QUERY_COMPLETA FROM ##CONSULTA_TEXTO_TABELAS ORDER BY NOME_DATABASE, NOME_SCHEMA, NOME_OBJETO, NOME_COLUNA

	DECLARE @CONSULTA_BUSCAR VARCHAR(MAX)	
			,@CHAVE	 INT

	OPEN MEU_CURSOR
	FETCH NEXT FROM MEU_CURSOR INTO @CHAVE, @CONSULTA_BUSCAR

	WHILE @@FETCH_STATUS = 0
	BEGIN

		--Atribuiu a uma variavél binária se a consulta retornou algo
		SET @QUERY = 'SELECT @RETORNO = CASE WHEN EXISTS (' + @CONSULTA_BUSCAR + ') THEN 1 ELSE 0 END' + CHAR(13)	
		SET @DYNAMICPARAMDEC = '@RETORNO VARCHAR(MAX) OUTPUT'		

		--PRINT @QUERY	
		EXECUTE SP_EXECUTESQL
				@QUERY   
				,@DYNAMICPARAMDEC
				,@RETORNO  OUTPUT

		--Faz a marcação se a consulta retornou algo
		UPDATE A
			SET A.RETORNOU_PROCURA = @RETORNO
			FROM ##CONSULTA_TEXTO_TABELAS A
			WHERE CHAVE = @CHAVE


		FETCH NEXT FROM MEU_CURSOR INTO @CHAVE, @CONSULTA_BUSCAR
	END

	CLOSE MEU_CURSOR
	DEALLOCATE MEU_CURSOR

--Retorna dados encontrados
SELECT NOME_DATABASE, TIPO_OBJETO, [OBJECT_ID], NOME_SCHEMA, NOME_OBJETO, NOME_COLUNA, TIPO_DADO_COLUNA, 
	QUERY_COMPLETA = STUFF(QUERY_COMPLETA, 1, CHARINDEX('FROM', QUERY_COMPLETA) - 1, 'SELECT * ')
	FROM ##CONSULTA_TEXTO_TABELAS
	WHERE RETORNOU_PROCURA = 1
	ORDER BY NOME_DATABASE, CASE TIPO_OBJETO WHEN 'TABELA' THEN 1 WHEN 'VIEW' THEN 2 ELSE 3 END
			,NOME_SCHEMA, NOME_OBJETO, NOME_COLUNA, TIPO_DADO_COLUNA, QUERY_COMPLETA 

SET NOCOUNT OFF

END	
